import { NitroConfig } from '../config/NitroConfig.js'
import { createFileMetadataString } from '../syntax/helpers.js'
import type { SourceFile } from '../syntax/SourceFile.js'

export function createSwiftUmbrellaHeader(files: SourceFile[]): SourceFile {
  const name = NitroConfig.getIosModuleName()
  const filename = `${name}-Swift-Cxx-Umbrella.hpp`

  const includes = files
    .filter((f) => f.platform === 'ios' || f.platform === 'shared')
    .filter((f) => f.language === 'c++')
    .filter((f) => f.name.endsWith('.hpp') || f.name.endsWith('.h'))
    .map((f) => `#include "${f.name}"`)

  const code = `
${createFileMetadataString(filename, '///')}

#pragma once

namespace ${name} {
class HybridImageSpecCxx;
class HybridImageFactorySpecCxx;
class HybridSwiftKotlinTestObjectSpecCxx;
}

${includes.join('\n')}

#if __has_include("${name}-Swift.h")
#include "${name}-Swift.h"
#else
#error ${name}'s autogenerated Swift header cannot be found! Make sure the Swift module's name is actually "${name}", and try building the app first.
#endif
`

  return {
    content: code,
    language: 'c++',
    name: filename,
    platform: 'ios',
    subdirectory: [],
  }
}
